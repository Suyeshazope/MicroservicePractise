spring.application.name=notification-service
server.port=8083

spring.mail.host=sandbox.smtp.mailtrap.io
spring.mail.port=2525
spring.mail.username=fd60aecfc227bf
spring.mail.password=daa8429ec273ee

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=notificationService

# Use the correct deserializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
#spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=io.confluent.kafka.serializers.KafkaAvroDeserializer

# Set the default type for deserialization
#spring.kafka.consumer.properties.spring.json.type.mapping=com.microservice.order_service.event.OrderPlacedEvent:com.microservices.notification_service.order.event.OrderPlacedEvent
#spring.kafka.consumer.properties.spring.json.value.default.type=com.microservices.notification_service.order.event.OrderPlacedEvent
spring.kafka.consumer.properties.schema.registry.url=http://127.0.0.1:8085
spring.kafka.consumer.properties.specific.avro.reader=true
#spring.kafka.consumer.properties.auto.register.schemas=true
spring.kafka.consumer.properties.use.latest.version=true

# Trust both packages to ensure Kafka can deserialize messages correctly
#spring.kafka.consumer.properties.spring.json.trusted.packages=com.microservices.notification_service.order.event
#spring.kafka.consumer.properties.spring.json.trusted.packages=*

management.endpoints.web.exposure.include=health, info, metrics, prometheus
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.observations.key-values.application=product-service
management.tracing.sampling.probability=1.0



